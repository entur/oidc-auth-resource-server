plugins {
    id 'java'
    id 'com.diffplug.spotless'
    id 'jacoco'
    id 'eclipse'
    id 'idea'

    // NOTE: external plugin version is specified in implementation dependency artifact of the project's build file
    id 'com.github.spotbugs'
    id 'com.github.ben-manes.versions'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    if(project.hasProperty('jacksonDatabindVersion')) {
        testImplementation("com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}")
    }

    if(project.hasProperty('junitJupiterVersion')) {
        testImplementation(platform("org.junit:junit-bom:${junitJupiterVersion}"))
        testImplementation('org.junit.jupiter:junit-jupiter')
        testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    }
}

// Enable deprecation messages when compiling Java code
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation"
}

repositories {
    mavenCentral()
}

/*************************************************************
 * Code quality plugins
 *************************************************************/

spotless {
    java {
        googleJavaFormat("1.17.0")
        indentWithTabs(2)
        indentWithSpaces(4)
    }
}

spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// build.finalizedBy(dependencyCheckAnalyze)  // Disabled since it fails in GitHub Actions

/*************************************************************
 * Test plugins
 *************************************************************/
test {
    systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'

    useJUnitPlatform()

    reports {
        html.required = true
    }
}

jacocoTestReport {
    // Adjust the output of the test report
    reports {
        xml.required = true
        csv.required = false
    }
}

/*************************************************************
 * Editor plugins
 *************************************************************/

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

// Tell idea to output to build/classes/main instead of /out/
idea {
    module {
        outputDir file('build/classes/main')
        testOutputDir file('build/classes/test')
    }
}