name: Publish to Sonatype
on:
  release:
    types: [published]

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1

      - name: Remove -SNAPSHOT from version in gradle.properties
        shell: bash
        run: |
          releaseVersion=$(cat ./gradle.properties | grep "version" | cut -d'=' -f2  | cut -d'-' -f1)
          latestTag=$(git describe --tags --abbrev=0)
          if [ "$releaseVersion" != "$latestTag" ]; then
            echo "Error: Version in gradle.properties ($releaseVersion) does not match the latest Git tag ($latestTag)"
            exit 1
          fi
          sed -i "s/version=.*/version=$releaseVersion/" gradle.properties

      - name: Import GPG Key
        run: |
          echo -n "$SONATYPE_GPG_KEY" | base64 --decode | gpg --batch --import
        shell: bash
        env:
          SONATYPE_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}

      - name: Ensure GPG Works in CI
        run: |
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          export GPG_TTY=$(tty)
        shell: bash

      - name: Publish to Sonatype
        run: ./gradlew publish -Psigning.gnupg.passphrase=$SONATYPE_GPG_KEY_PASSWORD -Psigning.gnupg.keyName=$SONATYPE_GPG_KEY_NAME
        env:
          SONATYPE_GPG_KEY_NAME: ${{ secrets.SONATYPE_GPG_KEY_NAME }}
          SONATYPE_GPG_KEY_PASSWORD: ${{ secrets.SONATYPE_GPG_KEY_PASSWORD }}
          SONATYPE_AUTH_USER: ${{ secrets.SONATYPE_AUTH_USER }}
          SONATYPE_AUTH_TOKEN: ${{ secrets.SONATYPE_AUTH_TOKEN }}
          GPG_TTY: $(tty)

      - name: Upgrade version
        shell: bash
        run: |
          releaseVersion=$(cat ./gradle.properties | grep "version" | cut -d'=' -f2  | cut -d'-' -f1)
          major=`echo $releaseVersion | cut -d. -f1`
          minor=`echo $releaseVersion | cut -d. -f2`
          minor="$((minor + 1))"
          patch=`echo 0`
          nextSnapshotVersion="$major.$minor.$patch-SNAPSHOT"
          sed -i "s/version=.*/version=$nextSnapshotVersion/" gradle.properties
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com          
          git add gradle.properties
          git commit -m "Update snapshot version"
          git push origin ${{ github.ref_name }}
